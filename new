#!/bin/bash
# 
# create new projects
# should:
#   - intialize a git repo
#   - create a .gitignore
#   - create language-specific things:
#       - elixir:
#           - mix new
#       - golang:
#           - dep init
#       - python:
#           - pipenv version 3.6
#       - rust:
#           - cargo init
#       - scala:
#           - sbt new

# $1 - language name
# $2 - project name
# $3 â€” extra options for projects

LANGUAGE_NAME=$1
PROJECT_NAME=$2
EXTRA_OPS=$3

LANGUAGES=("python", "golang", "elixir", "rust", "scala")

err() {
  echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $@" >&2
}

init_dir() {
  echo "Creating a ${LANGUAGE_NAME} project named ${PROJECT_NAME}"
  mkdir ${PROJECT_NAME}
}

init_git() {
  cd ${PROJECT_NAME}
  git init
  touch .gitignore
  cd ..
}

init_elixir() {
  mix new ${PROJECT_NAME} ${EXTRA_OPS}
  init_git
}

init_golang() {
  # dep init
  # that's... it?
  cd ${PROJECT_NAME}
  echo "Running 'dep init'"
  dep init
}

init_python() {
  # pipenv version 3.6
  # that's... it?
  cd ${PROJECT_NAME}
  echo "Initializing Python virtualenv using pipenv"
  pipenv --python 3.6
}

init_rust() {
  # just run cargo init!
  cargo new ${PROJECT_NAME} --vcs git
}

init_scala() {
  # just sbt new!
  sbt new scala/scala-seed.g8
}

#####################################################
# main : create project dir
# initialize dir with git and language-specific tools
#####################################################
main() {
  if [[ ${LANGUAGES[*]} =~ "${LANGUAGE_NAME}"} ]]; then
    err "${LANGUAGE_NAME} projects are not supported"
    exit 1
  fi
  echo "Creating a ${LANGUAGE_NAME} project named ${PROJECT_NAME} with options ${EXTRA_OPS}"
  case "${LANGUAGE_NAME}" in
    elixir)
      init_elixir
      ;;
    golang)
      init_dir
      init_git
      init_golang
      ;;
    python)
      init_dir
      init_git
      init_python
      ;;
    rust)
      init_rust
      ;;
    scala)
      init_scala
      init_git
      ;;
  esac
  echo "Done"
}

main
